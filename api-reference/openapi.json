{
  "openapi": "3.1.0",
  "info": {
    "title": "Ello.AI API",
    "description": "API for managing agents and calls in Ello.AI",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://172.18.2.102:5008"
    }
  ],
  "paths": {
    "/api/agents/{agent_id}": {
      "get": {
        "operationId": "getAgentById",
        "tags": ["Agents"],
        "summary": "Get Agent",
        "description": "Retrieves details of a specific agent by its ID",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "Unique identifier of the agent (e.g., 683715217c8e5fe1361c6faa)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": { "type": "string", "example": "Agent retrieved successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string", "example": "683715217c8e5fe1361c6faa" },
                        "workspaceId": { "type": "string", "example": "683578ec8ac922546dbaadaa" },
                        "name": { "type": "string", "example": "My Outbound Assistant" },
                        "type": { "type": "string", "example": "outbound" },
                        "category": { "type": "string", "example": "general" },
                        "description": { "type": "string", "example": "AI assistant for voice calls" },
                        "image": { "type": "string", "example": "https://voicemart.ai/assistant-icons/default.png" },
                        "features": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "popularity": { "type": "integer", "example": 0 },
                        "voiceConfig": {
                          "type": "object",
                          "properties": {
                            "provider": { "type": "string", "example": "elevenlabs" },
                            "voiceId": { "type": "string", "example": "emily" },
                            "language": { "type": "string", "example": "en-US" },
                            "patienceLevel": { "type": "integer", "example": 1 },
                            "speed": { "type": "integer", "example": 1 },
                            "pitch": { "type": "integer", "example": 1 },
                            "latency": { "type": "number", "example": 0.5 },
                            "stability": { "type": "number", "example": 0.5 },
                            "styleExaggeration": { "type": "number", "example": 0.75 },
                            "similarity": { "type": "number", "example": 0.8 },
                            "voicePromptType": { "type": "string", "nullable": true, "example": null },
                            "voicePrompt": { "type": "string", "nullable": true, "example": null }
                          }
                        },
                        "aiModel": {
                          "type": "object",
                          "properties": {
                            "provider": { "type": "string", "example": "openai" },
                            "model": { "type": "string", "example": "gpt-4" },
                            "temperature": { "type": "number", "example": 0.7 },
                            "maxTokens": { "type": "integer", "example": 200 }
                          }
                        },
                        "callConfig": {
                          "type": "object",
                          "properties": {
                            "timeZone": { "type": "string", "example": "UTC" },
                            "maxDuration": { "type": "integer", "example": 600 },
                            "voicemailDetection": {
                              "type": "object",
                              "properties": {
                                "enabled": { "type": "boolean", "example": true },
                                "type": { "type": "string", "example": "ml-based" }
                              }
                            },
                            "recordingEnabled": { "type": "boolean", "example": true },
                            "transcriptionEnabled": { "type": "boolean", "example": true },
                            "speakerBoost": { "type": "boolean", "example": false },
                            "idleReminders": {
                              "type": "array",
                              "items": { "type": ["boolean", "number"] },
                              "example": [false, 0.75]
                            },
                            "backGroundNoiseEnv": { "type": "string", "nullable": true, "example": null },
                            "limitCallDuration": {
                              "type": "array",
                              "items": { "type": ["boolean", "number"] },
                              "example": [false, 20]
                            },
                            "backGroundNoiseLevel": { "type": "string", "nullable": true, "example": null },
                            "backGroundNoiseThreshold": { "type": "number", "example": 0.75 },
                            "backGroundNoiseTimeout": { "type": "integer", "example": 10 },
                            "backGroundNoiseTimeoutThreshold": { "type": "number", "example": 0.75 },
                            "backGroundNoiseTimeoutInterval": { "type": "integer", "example": 10 }
                          }
                        },
                        "fillerWords": { "type": "boolean", "example": false },
                        "status": { "type": "boolean", "example": true },
                        "customVocabulary": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "timezone": { "type": "string", "example": "India" },
                        "greeting": { "type": "string", "example": "Hello! How can I assist you today?" },
                        "prompt": {
                          "type": "string",
                          "example": "You are a helpful AI assistant focused on providing accurate and friendly responses."
                        },
                        "knowledgeBases": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "actions": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "deployment": {
                          "type": "object",
                          "properties": {
                            "status": { "type": "string", "example": "draft" },
                            "version": { "type": "integer", "example": 1 },
                            "deployedAt": { "type": "string", "format": "date-time", "example": "2025-05-28T13:52:33.949000" },
                            "lastUpdated": { "type": "string", "format": "date-time", "example": "2025-05-28T13:52:33.949000" },
                            "error": { "type": "string", "nullable": true, "example": null }
                          }
                        },
                        "stats": {
                          "type": "object",
                          "properties": {
                            "totalCalls": { "type": "integer", "example": 0 },
                            "successRate": { "type": "number", "example": 1 },
                            "avgCallDuration": { "type": "integer", "example": 0 },
                            "lastCallAt": { "type": "string", "format": "date-time", "example": null }
                          }
                        },
                        "templateCategory": { "type": "string", "nullable": true, "example": null },
                        "industry": { "type": "string", "nullable": true, "example": null },
                        "recommendedActions": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "createdAt": { "type": "string", "format": "date-time", "example": "2025-05-28T13:52:33.951000" },
                        "updatedAt": { "type": "string", "format": "date-time", "example": "2025-05-28T13:52:33.951000" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [
          { "apiKey": [] },
          { "bearerAuth": [] }

        ],
        "x-mint": {
          "mcp": { "enabled": true }
        }
      },
      "put": {
        "operationId": "updateAgent",
        "tags": ["Agents"],
        "summary": "Update Agent",
        "description": "Updates an existing agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "Unique identifier of the agent to update",
            "required": true,
            "schema": { "type": "string", "example": "683c06debc7538418958bdb9" }
          }
        ],
        "requestBody": {
          "description": "Agent fields to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": { 
                    "type": "string", 
                    "example": "683c0129ea0c6f3e9b2ae326" 
                  },
                  "status": { 
                    "type": "boolean", 
                    "example": false 
                  }
                },
                "required": ["workspaceId", "status"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agent updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": { "type": "string", "example": "Assistant updated successfully" },
                    "data": { "$ref": "#/components/schemas/Agent" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Agent not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [
          { "apiKey": [] },
          { "bearerAuth": [] }
        ],
        "x-mint": {
          "mcp": { "enabled": true }
        }
      },
      "delete": {
          "operationId": "deleteAssistant",
          "tags": ["Agents"],
          "summary": "Delete Agent",
          "description": "Deletes an assistant by ID",
          "parameters": [
            {
              "name": "assistant_id",
              "in": "query",
              "description": "Unique identifier of the assistant to delete",
              "required": true,
              "schema": { "type": "string", "example": "683579c3a034253be66ea984" }
            }
          ],
          "responses": {
            "200": {
              "description": "Assistant deleted and duplicated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": { "type": "integer", "example": 200 },
                      "message": { "type": "string", "example": "Assistant duplicated successfully" },
                      "data": {
                        "type": "object",
                        "properties": {
                          "_id": { "type": "string", "example": "683c2b4e59e70f73476ed5cc" },
                          "workspaceId": { "type": "string", "example": "683c0129ea0c6f3e9b2ae326" },
                          "name": { "type": "string", "example": "My Inbound Assistant - Harsha" },
                          "type": { "type": "string", "example": "inbound" },
                          "category": { "type": "string", "example": "general" },
                          "description": { "type": "string", "example": "AI assistant for voice calls" },
                          "image": { "type": "string", "format": "uri", "example": "https://voicemart.ai/assistant-icons/default.png" },
                          "features": { "type": "array", "items": { "type": "string" }, "example": [] },
                          "popularity": { "type": "integer", "example": 0 },
                          "voiceConfig": {
                            "type": "object",
                            "properties": {
                              "provider": { "type": "string", "example": "elevenlabs" },
                              "voiceId": { "type": "string", "example": "emily" },
                              "language": { "type": "string", "example": "en-US" },
                              "patienceLevel": { "type": "integer", "example": 1 },
                              "speed": { "type": "integer", "example": 1 },
                              "pitch": { "type": "integer", "example": 1 },
                              "latency": { "type": "number", "example": 0.5 },
                              "stability": { "type": "number", "example": 0.5 },
                              "styleExaggeration": { "type": "number", "example": 0.75 },
                              "similarity": { "type": "number", "example": 0.8 },
                              "voicePromptType": { "type": "string", "nullable": true, "example": null },
                              "voicePrompt": { "type": "string", "nullable": true, "example": null }
                            }
                          },
                          "aiModel": {
                            "type": "object",
                            "properties": {
                              "provider": { "type": "string", "example": "openai" },
                              "model": { "type": "string", "example": "gpt-4" },
                              "temperature": { "type": "number", "example": 0.7 },
                              "maxTokens": { "type": "integer", "example": 200 }
                            }
                          },
                          "callConfig": {
                            "type": "object",
                            "properties": {
                              "timeZone": { "type": "string", "example": "UTC" },
                              "maxDuration": { "type": "integer", "example": 600 },
                              "voicemailDetection": {
                                "type": "object",
                                "properties": {
                                  "enabled": { "type": "boolean", "example": true },
                                  "type": { "type": "string", "example": "ml-based" }
                                }
                              },
                              "recordingEnabled": { "type": "boolean", "example": true },
                              "transcriptionEnabled": { "type": "boolean", "example": true },
                              "speakerBoost": { "type": "boolean", "example": false },
                              "idleReminders": {
                                "type": "array",
                                "items": { "type": ["boolean", "number"] },
                                "example": [false, 0.75]
                              },
                              "backGroundNoiseEnv": { "type": "string", "nullable": true, "example": null },
                              "limitCallDuration": {
                                "type": "array",
                                "items": { "type": ["boolean", "number"] },
                                "example": [false, 20]
                              },
                              "backGroundNoiseLevel": { "type": "string", "nullable": true, "example": null },
                              "backGroundNoiseThreshold": { "type": "number", "example": 0.75 },
                              "backGroundNoiseTimeout": { "type": "integer", "example": 10 },
                              "backGroundNoiseTimeoutThreshold": { "type": "number", "example": 0.75 },
                              "backGroundNoiseTimeoutInterval": { "type": "integer", "example": 10 }
                            }
                          },
                          "fillerWords": { "type": "boolean", "example": false },
                          "status": { "type": "boolean", "example": true },
                          "customVocabulary": { "type": "array", "items": { "type": "string" }, "example": [] },
                          "timezone": { "type": "string", "example": "India" },
                          "greeting": { "type": "string", "example": "Hello! How can I assist you today?" },
                          "prompt": { "type": "string", "example": "You are a helpful AI assistant focused on providing accurate and friendly responses." },
                          "knowledgeBases": { "type": "array", "items": { "type": "string" }, "example": [] },
                          "actions": { "type": "array", "items": { "type": "string" }, "example": [] },
                          "deployment": {
                            "type": "object",
                            "properties": {
                              "status": { "type": "string", "example": "draft" },
                              "version": { "type": "integer", "example": 1 },
                              "deployedAt": { "type": "string", "format": "date-time", "nullable": true, "example": null },
                              "lastUpdated": { "type": "string", "format": "date-time", "example": "2025-06-01T10:28:30.021000" },
                              "error": { "type": "string", "nullable": true, "example": null }
                            }
                          },
                          "stats": {
                            "type": "object",
                            "properties": {
                              "totalCalls": { "type": "integer", "example": 0 },
                              "successRate": { "type": "number", "example": 1 },
                              "avgCallDuration": { "type": "integer", "example": 0 },
                              "lastCallAt": { "type": "string", "format": "date-time", "nullable": true, "example": null }
                            }
                          },
                          "templateCategory": { "type": "string", "nullable": true, "example": null },
                          "industry": { "type": "string", "nullable": true, "example": null },
                          "recommendedActions": { "type": "array", "items": { "type": "string" }, "example": [] },
                          "createdAt": { "type": "string", "format": "date-time", "example": "2025-06-01T10:28:30.022000" },
                          "updatedAt": { "type": "string", "format": "date-time", "example": "2025-06-01T10:28:30.022000" }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": { "type": "integer", "example": 400 },
                      "message": { "type": "string", "example": "Unexpected error" }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Assistant not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": { "type": "integer", "example": 404 },
                      "message": { "type": "string", "example": "Assistant not found" }
                    }
                  }
                }
              }
            }
          },
          "security": [
            { "apiKey": [] },
            { "bearerAuth": [] }
          ],
          "x-mint": {
            "mcp": { "enabled": true }
          }
        },
    },
    "/api/agents": {
      "post": {
        "operationId": "createAgent",
        "tags": ["Agents"],
        "summary": "Create Agent",
        "description": "Creates a new agent of specified type.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["inbound", "outbound", "chat", "agent builder"],
                    "example": "outbound"
                  }
                },
                "required": ["type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assistant created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": { "type": "string", "example": "Assistant created successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string", "example": "683715217c8e5fe1361c6faa" },
                        "name": { "type": "string", "example": "My Outbound Assistant" },
                        "type": { "type": "string", "example": "outbound" },
                        "category": { "type": "string", "example": "general" },
                        "description": { "type": "string", "example": "AI assistant for voice calls" },
                        "image": { "type": "string", "example": "https://voicemart.ai/assistant-icons/default.png" },
                        "features": { "type": "array", "items": { "type": "string" } },
                        "popularity": { "type": "integer", "example": 0 },
                        "voiceConfig": {
                          "type": "object",
                          "properties": {
                            "provider": { "type": "string", "example": "elevenlabs" },
                            "voiceId": { "type": "string", "example": "emily" },
                            "language": { "type": "string", "example": "en-US" },
                            "patienceLevel": { "type": "integer", "example": 1 },
                            "speed": { "type": "integer", "example": 1 },
                            "pitch": { "type": "integer", "example": 1 },
                            "latency": { "type": "number", "example": 0.5 },
                            "stability": { "type": "number", "example": 0.5 },
                            "styleExaggeration": { "type": "number", "example": 0.75 },
                            "similarity": { "type": "number", "example": 0.8 },
                            "voicePromptType": { "type": ["string", "null"], "example": null },
                            "voicePrompt": { "type": ["string", "null"], "example": null }
                          }
                        },
                        "aiModel": {
                          "type": "object",
                          "properties": {
                            "provider": { "type": "string", "example": "openai" },
                            "model": { "type": "string", "example": "gpt-4" },
                            "temperature": { "type": "number", "example": 0.7 },
                            "maxTokens": { "type": "integer", "example": 200 }
                          }
                        },
                        "callConfig": {
                          "type": "object",
                          "properties": {
                            "timeZone": { "type": "string", "example": "UTC" },
                            "maxDuration": { "type": "integer", "example": 600 },
                            "voicemailDetection": {
                              "type": "object",
                              "properties": {
                                "enabled": { "type": "boolean", "example": true },
                                "type": { "type": "string", "example": "ml-based" }
                              }
                            },
                            "recordingEnabled": { "type": "boolean", "example": true },
                            "transcriptionEnabled": { "type": "boolean", "example": true },
                            "speakerBoost": { "type": "boolean", "example": false }
                          }
                        },
                        "status": { "type": "boolean", "example": true },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-28T13:52:33.951000"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-28T13:52:33.951000"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [
          { "apiKey": [] },
          { "bearerAuth": [] }
        ],
        "x-mint": {
          "mcp": { "enabled": true }
        }
      },
      "get": {
          "operationId": "getAssistants",
          "tags": ["Agents"],
          "summary": "Get List of Agent",
          "description": "Retrieves a paginated list of agents",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "Number of agents per page",
              "required": false,
              "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 10, "example": 10 }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number",
              "required": false,
              "schema": { "type": "integer", "minimum": 1, "default": 1, "example": 1 }
            },
            {
              "name": "category",
              "in": "query",
              "description": "Filter by agent category",
              "required": false,
              "schema": { "type": "string", "example": "sales" }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Search in name or description",
              "required": false,
              "schema": { "type": "string", "example": "outbound" }
            },
            {
              "name": "sort_field",
              "in": "query",
              "description": "Field to sort by",
              "required": false,
              "schema": { "type": "string", "default": "createdAt", "example": "createdAt" }
            },
            {
              "name": "sort_order",
              "in": "query",
              "description": "Sort direction",
              "required": false,
              "schema": { "type": "string", "enum": ["asc", "desc"], "default": "desc", "example": "desc" }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "Filter agents created on or after this date (ISO 8601)",
              "required": false,
              "schema": { "type": "string", "format": "date-time", "example": "2025-05-01T00:00:00.000Z" }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "Filter agents created before this date (ISO 8601)",
              "required": false,
              "schema": { "type": "string", "format": "date-time", "example": "2025-05-31T23:59:59.999Z" }
            }
          ],
          "requestBody": {
            "description": "Advanced filter groups (AND between groups, OR within group)",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "object",
                        "properties": {
                          "status": { "type": "boolean", "example": true },
                          "type": {
                            "type": "string",
                            "enum": ["inbound", "outbound", "chat", "agent builder"],
                            "example": "outbound"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "required": ["filters"]
                  },
                  "example": [
                    {
                      "filters": {
                        "status": true,
                        "type": "outbound"
                      }
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Assistants retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": { "type": "integer", "example": 200 },
                      "message": { "type": "string", "example": "Assistants retrieved successfully" },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string", "example": "683715217c8e5fe1361c6faa" },
                            "name": { "type": "string", "example": "My Outbound Assistant" },
                            "type": { "type": "string", "example": "outbound" },
                            "createdAt": { "type": "string", "format": "date-time", "example": "2025-05-28T13:52:33.951000" },
                            "voiceEngine": { "type": "string", "example": "elevenlabs" },
                            "phoneNumber": { "type": "string", "nullable": true, "example": null },
                            "status": { "type": "boolean", "example": true }
                          }
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": { "type": "integer", "example": 1 },
                          "limit": { "type": "integer", "example": 100 },
                          "total": { "type": "integer", "example": 2 },
                          "totalPages": { "type": "integer", "example": 1 },
                          "hasNextPage": { "type": "boolean", "example": false },
                          "hasPrevPage": { "type": "boolean", "example": false }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": { "type": "integer", "example": 400 },
                      "message": { "type": "string", "example": "Unexpected error" }
                    }
                  }
                }
              }
            }
          },
          "security": [
            { "apiKey": [] },
            { "bearerAuth": [] }
          ],
          "x-mint": {
            "mcp": { "enabled": true }
          }
       },
    },
    "/api/agents/knowledge-bases/{kb_id}/assign": {
      "post": {
        "operationId": "assignKnowledgeBaseToAgent",
        "tags": ["Agents"],
        "summary": "Assign Knowledge Base to Agent",
        "description": "Assigns an existing knowledge base to one or more agents.",
        "parameters": [
          {
            "name": "kb_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the knowledge base to assign.",
            "schema": {
              "type": "string",
              "example": "kb_12345"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["68dce5202fc07b92042493b1"]
                  }
                },
                "required": ["agent_ids"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Knowledge base assigned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Knowledge base assigned successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["68dce5202fc07b92042493b1"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid kb_id or agent_ids"
          }
        }
      }
    },
    "/api/agents/knowledge-bases/{kb_id}/unassign": {
  "post": {
    "operationId": "unassignKnowledgeBaseFromAgent",
    "tags": ["Agents"],
    "summary": "Unassign Knowledge Base from Agent",
    "description": "Removes an existing knowledge base association from one or more agents.",
    "parameters": [
      {
        "name": "kb_id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the knowledge base to unassign.",
        "schema": {
          "type": "string",
          "example": "kb_12345"
        }
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "agent_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["68dce5202fc07b92042493b1"]
              }
            },
            "required": ["agent_ids"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Knowledge base unassigned successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Knowledge base unassigned successfully"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": ["68dce5202fc07b92042493b1"]
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid kb_id or agent_ids"
      }
    }
  }
},
    "/api/knowledge-base": {
        "post": {
        "operationId": "createSingleSourceKnowledgeBase",
        "tags": ["Knowledge Base"],
        "summary": "Create Single Knowledge Base",
        "description": "Creates a single-source knowledge base using a URL, base URL, and sub-links.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "urlName": {
                    "type": "string",
                    "example": "Ello.ai"
                  },
                  "baseUrl": {
                    "type": "string",
                    "example": "https://getello.ai"
                  },
                  "subLinks": {
                    "type": "string",
                    "example": "dsfsdfdsf"
                  },
                  "type": {
                    "type": "string",
                    "example": "link"
                  }
                },
                "required": ["urlName", "baseUrl", "subLinks", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Single source knowledge base created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Single source knowledge base created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string", "example": "690108a004ea5e76d18034ab" },
                        "workspaceId": { "type": "string", "example": "685d4b93fb5b2e221dc80ea9" },
                        "userId": { "type": "string", "example": "685d4b93fb5b2e221dc80ea8" },
                        "name": { "type": "string", "example": "srikanth test" },
                        "description": { "type": "string", "example": "Single source knowledge base: srikanth test" },
                        "type": { "type": "string", "example": "link" },
                        "sources": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": { "type": "string", "example": "690108a004ea5e76d18034ad" },
                              "type": { "type": "string", "example": "link" },
                              "fileType": { "type": ["string", "null"], "example": null },
                              "name": { "type": "string", "example": "srikanth test" },
                              "content": { "type": ["string", "null"], "example": null },
                              "url": {
                                "type": "array",
                                "items": { "type": "string" },
                                "example": ["http://yesgnome.com"]
                              },
                              "filePath": { "type": ["string", "null"], "example": null },
                              "status": { "type": "string", "example": "completed" },
                              "error": { "type": ["string", "null"], "example": null },
                              "createdAt": { "type": "string", "format": "date-time" },
                              "updatedAt": { "type": "string", "format": "date-time" },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "fileName": { "type": ["string", "null"], "example": null },
                                  "fileType": { "type": ["string", "null"], "example": null },
                                  "fileKey": { "type": ["string", "null"], "example": null },
                                  "websiteName": { "type": "string", "example": "srikanth test" },
                                  "description": { "type": "string", "example": "" }
                                }
                              }
                            }
                          }
                        },
                        "status": { "type": "boolean", "example": true },
                        "createdAt": { "type": "string", "format": "date-time" },
                        "updatedAt": { "type": "string", "format": "date-time" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      },
        "get": {
            "operationId": "listKnowledgeBases",
            "tags": ["Knowledge"],
            "summary": "List Knowledge Bases",
            "description": "Retrieve a paginated list of knowledge bases for a workspace",
            "parameters": [
              {
                "name": "workspace_id",
                "in": "query",
                "description": "Unique identifier of the workspace",
                "required": true,
                "schema": { "type": "string", "example": "683578ec8ac922546dbaadaa" }
              },
              {
                "name": "page",
                "in": "query",
                "description": "Page number for pagination",
                "required": false,
                "schema": { "type": "integer", "example": 1 }
              },
              {
                "name": "limit",
                "in": "query",
                "description": "Number of results per page",
                "required": false,
                "schema": { "type": "integer", "example": 10 }
              }
            ],
            "responses": {
              "200": {
                "description": "Knowledge bases retrieved successfully",
                "content": {
                  "application/json": {
                    "example": {
                      "status": 200,
                      "message": "Knowledge bases retrieved successfully",
                      "data": [
                        {
                          "_id": "684035a7dba9d9c2aa583d93",
                          "workspaceId": "683ea9dbea7c50a81708dae7",
                          "name": "Test",
                          "description": "Updated description of the knowledge base 1",
                          "type": "documents",
                          "sources": [
                            {
                              "_id": "684035a7dba9d9c2aa583d94",
                              "type": "pdf",
                              "name": "sample1.pdf",
                              "url": "https://voicemart-assets.s3.amazonaws.com/683ea9dbea7c50a81708dae7/documents/sample1.pdf",
                              "status": "completed",
                              "metadata": {
                                "fileName": "sample1.pdf",
                                "fileType": "pdf",
                                "fileKey": "683ea9dbea7c50a81708dae7/documents/sample1.pdf"
                              }
                            }
                          ],
                          "status": true,
                          "createdAt": "2025-06-04T12:01:43.682000",
                          "updatedAt": "2025-06-04T13:58:16.585000"
                        }
                      ],
                      "pagination": {
                        "page": 1,
                        "limit": 10,
                        "total": 12,
                        "totalPages": 2,
                        "hasNextPage": true,
                        "hasPrevPage": false
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Invalid query parameters",
                "content": {
                  "application/json": {
                    "schema": { "$ref": "#/components/schemas/Error" }
                  }
                }
              }
            },
            "security": [
              { "apiKey": [] },
              { "bearerAuth": [] }
            ],
            "x-mint": {
              "mcp": { "enabled": true }
            }
          }
        },
    "/api/knowledge-base/{kb_id}": {
      "get": {
        "operationId": "getKnowledgeBase",
        "tags": ["Knowledge"],
        "summary": "Get Knowledge Base",
        "description": "Retrieves a knowledge base by workspace and kb ID with pagination",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "description": "Unique identifier of the workspace",
            "required": true,
            "schema": { "type": "string", "example": "683578ec8ac922546dbaadaa" }
          },
          {
            "name": "kb_id",
            "in": "query",
            "description": "Unique identifier of the knowledge base",
            "required": true,
            "schema": { "type": "string", "example": "6835c55f364fa2843bc168e5" }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": { "type": "integer", "example": 10 }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to retrieve",
            "required": false,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Knowledge base retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": 200,
                  "message": "Knowledge base retrieved successfully",
                  "data": {
                    "_id": "684044d40eecbc4fee60d2fe",
                    "workspaceId": "683ea9dbea7c50a81708dae7",
                    "name": "Harshu Test KB",
                    "description": "Test voice calls",
                    "type": "documents",
                    "sources": {
                      "data": [
                        {
                          "_id": "684044d40eecbc4fee60d2ff",
                          "type": "pdf",
                          "fileType": null,
                          "name": "sample1.pdf",
                          "content": null,
                          "url": "https://voicemart-assets.s3.amazonaws.com/683ea9dbea7c50a81708dae7/documents/sample1.pdf",
                          "filePath": null,
                          "status": "completed",
                          "error": null,
                          "createdAt": "2025-06-04T13:06:28.024000",
                          "updatedAt": "2025-06-04T13:06:28.024000",
                          "metadata": {
                            "fileName": "sample1.pdf",
                            "fileType": "pdf",
                            "fileKey": "683ea9dbea7c50a81708dae7/documents/sample1.pdf",
                            "websiteName": null,
                            "description": null
                          }
                        },
                        {
                          "_id": "684044d40eecbc4fee60d300",
                          "type": "pdf",
                          "fileType": null,
                          "name": "sample2.pdf",
                          "content": null,
                          "url": "https://voicemart-assets.s3.amazonaws.com/683ea9dbea7c50a81708dae7/documents/sample2.pdf",
                          "filePath": null,
                          "status": "completed",
                          "error": null,
                          "createdAt": "2025-06-04T13:06:28.024000",
                          "updatedAt": "2025-06-04T13:06:28.024000",
                          "metadata": {
                            "fileName": "sample2.pdf",
                            "fileType": "pdf",
                            "fileKey": "683ea9dbea7c50a81708dae7/documents/sample2.pdf",
                            "websiteName": null,
                            "description": null
                          }
                        },
                        {
                          "_id": "684044d40eecbc4fee60d301",
                          "type": "link",
                          "fileType": null,
                          "name": "Kids Journey",
                          "content": null,
                          "url": "https://kids.nationalgeographic.com/",
                          "filePath": null,
                          "status": "completed",
                          "error": null,
                          "createdAt": "2025-06-04T13:06:28.024000",
                          "updatedAt": "2025-06-04T13:06:28.024000",
                          "metadata": {
                            "fileName": null,
                            "fileType": null,
                            "fileKey": null,
                            "websiteName": "Kids Journey",
                            "description": ""
                          }
                        },
                        {
                          "_id": "684044d40eecbc4fee60d302",
                          "type": "txt",
                          "fileType": null,
                          "name": "Company",
                          "content": "Hey, there how are you !!",
                          "url": null,
                          "filePath": null,
                          "status": "completed",
                          "error": null,
                          "createdAt": "2025-06-04T13:06:28.024000",
                          "updatedAt": "2025-06-04T13:06:28.024000",
                          "metadata": {
                            "fileName": null,
                            "fileType": null,
                            "fileKey": null,
                            "websiteName": null,
                            "description": ""
                          }
                        }
                      ],
                      "pagination": {
                        "page": 1,
                        "limit": 10,
                        "total": 4,
                        "totalPages": 1,
                        "hasNextPage": false,
                        "hasPrevPage": false,
                        "sort_by": "updatedAt",
                        "sort_order": "desc"
                      }
                    },
                    "status": true,
                    "createdAt": "2025-06-04T13:06:28.037000",
                    "updatedAt": "2025-06-04T13:06:28.037000",
                    "sourceCounts": {
                      "total": 4,
                      "files": 2,
                      "links": 1,
                      "docs": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Knowledge base not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [
          { "apiKey": [] },
          { "bearerAuth": [] }
        ],
        "x-mint": {
          "mcp": { "enabled": true }
        }
      },
      "delete": {
        "operationId": "deleteKnowledgeBase",
        "tags": ["Knowledge"],
        "summary": "Delete Knowledge Base",
        "description": "Deletes a knowledge base by workspace and kb ID",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "description": "Unique identifier of the workspace",
            "required": true,
            "schema": { "type": "string", "example": "683578ec8ac922546dbaadaa" }
          },
          {
            "name": "kb_id",
            "in": "query",
            "description": "Unique identifier of the knowledge base",
            "required": true,
            "schema": { "type": "string", "example": "68370e3d5b7d04371d20b4e1" }
          }
        ],
        "responses": {
          "200": {
            "description": "Knowledge base deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": 200,
                  "message": "Knowledge base deleted successfully",
                  "data": {}
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Knowledge base not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [
          { "apiKey": [] },
          { "bearerAuth": [] }
        ],
        "x-mint": {
          "mcp": { "enabled": true }
        }
      },
      "put": {
      "summary": "Update Knowledge Base",
      "tags": ["Knowledge Base"],
      "description": "Updates an existing knowledge base by ID.",
      "parameters": [
        {
          "name": "kb_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier of the knowledge base to update.",
          "schema": {
            "type": "string",
            "example": "652fae92b8a7f1e23babc123"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 100,
                  "example": "Customer Support KB"
                },
                "description": {
                  "type": "string",
                  "maxLength": 500,
                  "example": "Contains FAQs and troubleshooting guides."
                }
              },
              "required": []
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Knowledge base updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 200
                  },
                  "message": {
                    "type": "string",
                    "example": "Knowledge base updated successfully"
                  },
                  "data": {
                    "type": "object",
                    "example": {
                      "_id": "652fae92b8a7f1e23babc123",
                      "name": "Customer Support KB",
                      "description": "Contains FAQs and troubleshooting guides."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    },
    "/api/agents/{agent_id}/calls": {
      "post": {
        "summary": "Create Call",
        "tags": ["Calls"],
        "description": "Creates and initiates a new call for the specified agent.",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the agent initiating the call.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Hello! Am I speaking to Sri?"
                  },
                  "context": {
                    "type": "string",
                    "example": "something"
                  },
                  "to_number": {
                    "type": "string",
                    "example": "12345567890"
                  },
                  "source": {
                    "type": "string",
                    "example": "something"
                  },
                  "hook_url": {
                    "type": "string",
                    "example": "http://soetinsdfdfd"
                  },
                  "siptrunk_id": {
                    "type": "string",
                    "example": "s3434ededs"
                  },
                  "agent_type": {
                    "type": "string",
                    "example": "webcall"
                  },
                  "name": {
                    "type": "string",
                    "example": "sri"
                  }
                },
                "required": ["message", "to_number", "source", "agent_type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message published successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Message published successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "conversation_id": "6900b87ca70928b1224f0619",
                        "call_status": "success"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [
          { "apiKey": [] },
          { "bearerAuth": [] }
        ],
        "x-mint": {
          "mcp": { "enabled": true }
        }
      }
    },
    "/calls": {
        "get": {
          "operationId": "getCalls",
          "tags": ["Calls"],
          "description": "Returns all calls the user has access to",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to return",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Call response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Call"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "x-mint": {
            "mcp": {
              "enabled": true }
            }
        },
        "post": {
          "operationId": "createCall",
          "tags": ["Calls"],
          "description": "Creates a new call",
          "requestBody": {
            "description": "Call details to add",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewCall"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Call created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Call"
                  }
                }
              }
            },
            "400": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "x-mint": {
            "mcp": {
              "enabled": true }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "KnowledgeBaseSource": {
          "type": "object",
          "properties": {
            "type": { "type": "string", "example": "pdf" },
            "name": { "type": "string", "example": "sample1.pdf" },
            "url": { "type": "string", "format": "uri", "nullable": true, "example": "https://voicemart-assets.s3.amazonaws.com/683ea9dbea7c50a81708dae7/documents/sample1.pdf" },
            "content": { "type": "string", "nullable": true, "example": null },
            "metadata": {
              "type": "object",
              "properties": {
                "fileName": { "type": "string", "nullable": true, "example": "sample1.pdf" },
                "fileType": { "type": "string", "nullable": true, "example": "pdf" },
                "fileKey": { "type": "string", "nullable": true, "example": "683ea9dbea7c50a81708dae7/documents/sample1.pdf" },
                "websiteName": { "type": "string", "nullable": true, "example": "Kids Journey" },
                "description": { "type": "string", "nullable": true, "example": "" }
              }
            },
            "lastSync": { "type": "string", "format": "date-time", "nullable": true, "example": null },
            "_id": { "type": "string", "example": "684052e7347bf47f785799e3" },
            "createdAt": { "type": "string", "format": "date-time", "example": "2025-06-04T14:06:31.374254" },
            "updatedAt": { "type": "string", "format": "date-time", "example": "2025-06-04T14:06:31.374254" }
          }
        },
        "KnowledgeBase": {
          "type": "object",
          "properties": {
            "name": { "type": "string", "example": "Harshu Test KB" },
            "description": { "type": "string", "example": "Test voice calls" },
            "type": { "type": "string", "example": "documents" },
            "sources": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/KnowledgeBaseSource" }
            },
            "_id": { "type": "string", "example": "684052e7347bf47f785799e2" },
            "workspaceId": { "type": "string", "example": "683ea9dbea7c50a81708dae7" },
            "createdAt": { "type": "string", "format": "date-time", "example": "2025-06-04T14:06:31.374254" },
            "updatedAt": { "type": "string", "format": "date-time", "example": "2025-06-04T14:06:31.374254" }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "status": { "type": "integer", "example": 400 },
            "message": { "type": "string", "example": "Unexpected error" }
          }
        }
      },
      "securitySchemes": {
        "apiKey": {
          "type": "apiKey",
          "in": "header",
          "name": "X-API-Key"
        },
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
}