{
  "openapi": "3.1.0",
  "info": {
    "title": "Ello.AI API",
    "description": "API for managing agents and calls in Ello.AI",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api-dev.getello.ai/"
    }
  ],
 
  "paths": {
    "/api/assistants/get": {
      "get": {
        "operationId": "getAgentById",
        "tags": ["Agents"],
        "summary": "Get Agents",
        "description": "Retrieves details of a specific agent by its ID",
        "parameters": [
          {
            "name": "assistantId",
            "in": "query",
            "description": "Unique identifier of the agent (e.g., 683715217c8e5fe1361c6faa)",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "workspaceId",
            "in": "query",
            "description": "Unique identifier of the workspace (e.g., 683715217c8e5fe1361c6faa)",
            "required": true,
            "schema": { "type": "string" }
          }
  
        ],
        "responses": {
          "200": {
            "description": "Assistant retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": { "type": "string", "example": "Assistant retrieved successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string", "example": "683715217c8e5fe1361c6faa" },
                        "workspaceId": { "type": "string", "example": "683578ec8ac922546dbaadaa" },
                        "name": { "type": "string", "example": "My Outbound Assistant" },
                        "type": { "type": "string", "example": "outbound" },
                        "category": { "type": "string", "example": "general" },
                        "description": { "type": "string", "example": "AI assistant for voice calls" },
                        "image": { "type": "string", "example": "https://voicemart.ai/assistant-icons/default.png" },
                        "features": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "popularity": { "type": "integer", "example": 0 },
                        "voiceConfig": {
                          "type": "object",
                          "properties": {
                            "provider": { "type": "string", "example": "elevenlabs" },
                            "voiceId": { "type": "string", "example": "emily" },
                            "language": { "type": "string", "example": "en-US" },
                            "patienceLevel": { "type": "integer", "example": 1 },
                            "speed": { "type": "integer", "example": 1 },
                            "pitch": { "type": "integer", "example": 1 },
                            "latency": { "type": "number", "example": 0.5 },
                            "stability": { "type": "number", "example": 0.5 },
                            "styleExaggeration": { "type": "number", "example": 0.75 },
                            "similarity": { "type": "number", "example": 0.8 },
                            "voicePromptType": { "type": "string", "nullable": true, "example": null },
                            "voicePrompt": { "type": "string", "nullable": true, "example": null }
                          }
                        },
                        "aiModel": {
                          "type": "object",
                          "properties": {
                            "provider": { "type": "string", "example": "openai" },
                            "model": { "type": "string", "example": "gpt-4" },
                            "temperature": { "type": "number", "example": 0.7 },
                            "maxTokens": { "type": "integer", "example": 200 }
                          }
                        },
                        "callConfig": {
                          "type": "object",
                          "properties": {
                            "timeZone": { "type": "string", "example": "UTC" },
                            "maxDuration": { "type": "integer", "example": 600 },
                            "voicemailDetection": {
                              "type": "object",
                              "properties": {
                                "enabled": { "type": "boolean", "example": true },
                                "type": { "type": "string", "example": "ml-based" }
                              }
                            },
                            "recordingEnabled": { "type": "boolean", "example": true },
                            "transcriptionEnabled": { "type": "boolean", "example": true },
                            "speakerBoost": { "type": "boolean", "example": false },
                            "idleReminders": {
                              "type": "array",
                              "items": { "type": "number" },
                              "example": [false, 0.75]
                            },
                            "backGroundNoiseEnv": { "type": "string", "nullable": true, "example": null },
                            "limitCallDuration": {
                              "type": "array",
                              "items": { "type": "number" },
                              "example": [false, 20]
                            },
                            "backGroundNoiseLevel": { "type": "string", "nullable": true, "example": null },
                            "backGroundNoiseThreshold": { "type": "number", "example": 0.75 },
                            "backGroundNoiseTimeout": { "type": "integer", "example": 10 },
                            "backGroundNoiseTimeoutThreshold": { "type": "number", "example": 0.75 },
                            "backGroundNoiseTimeoutInterval": { "type": "integer", "example": 10 }
                          }
                        },
                        "fillerWords": { "type": "boolean", "example": false },
                        "status": { "type": "boolean", "example": true },
                        "customVocabulary": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "timezone": { "type": "string", "example": "India" },
                        "greeting": { "type": "string", "example": "Hello! How can I assist you today?" },
                        "prompt": {
                          "type": "string",
                          "example": "You are a helpful AI assistant focused on providing accurate and friendly responses."
                        },
                        "knowledgeBases": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "actions": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "deployment": {
                          "type": "object",
                          "properties": {
                            "status": { "type": "string", "example": "draft" },
                            "version": { "type": "integer", "example": 1 },
                            "deployedAt": { "type": "string", "example": "2025-05-28T13:52:33.949000" },
                            "lastUpdated": { "type": "string", "example": "2025-05-28T13:52:33.949000" },
                            "error": { "type": "string", "nullable": true, "example": null }
                          }
                        },
                        "stats": {
                          "type": "object",
                          "properties": {
                            "totalCalls": { "type": "integer", "example": 0 },
                            "successRate": { "type": "number", "example": 1 },
                            "avgCallDuration": { "type": "integer", "example": 0 },
                            "lastCallAt": { "type": "string", "nullable": true, "example": null }
                          }
                        },
                        "templateCategory": { "type": "string", "nullable": true, "example": null },
                        "industry": { "type": "string", "nullable": true, "example": null },
                        "recommendedActions": { "type": "array", "items": { "type": "string" }, "example": [] },
                        "createdAt": { "type": "string", "example": "2025-05-28T13:52:33.951000" },
                        "updatedAt": { "type": "string", "example": "2025-05-28T13:52:33.951000" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security" : [
          { "bearerAuth": [] },
          { "apiKey": [] }
        ],
        "x-mint": {
          "mcp": { "enabled": true }
        }
      }
    },
    "/agents": {
      "get": {
        "operationId": "listAgents",
        "tags": ["Agents"],
        "description": "Returns all agents the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "workspace_id: 683578ec8ac922546dbaadaa
                           assistant_id: 683715217c8e5fe1361c6faa",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-mint": {
          "mcp": {
            "enabled": true
          }
        }
      },
      "post": {
        "operationId": "createAgent",
        "tags": ["Agents"],
        "description": "Creates a new agent",
        "requestBody": {
          "description": "Agent details to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agent created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-mint": {
          "mcp": {
            "enabled": true
          }
        }
      }
    },
    "/calls": {
      "get": {
        "operationId": "getCalls",
        "tags": ["Calls"],
        "description": "Returns all calls the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Call response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Call"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-mint": {
          "mcp": {
            "enabled": true
          }
        }
      },
      "post": {
        "operationId": "createCall",
        "tags": ["Calls"],
        "description": "Creates a new call",
        "requestBody": {
          "description": "Call details to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Call created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-mint": {
          "mcp": {
            "enabled": true
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Agent": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Agent name"
          },
          "type": {
            "type": "string",
            "description": "Agent type"
          }
        }
      },
      "NewAgent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Agent"
          },
          {
            "required": ["id"],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Call": {
        "required": ["agentId"],
        "type": "object",
        "properties": {
          "agentId": {
            "type": "string",
            "description": "ID of the agent"
          },
          "status": {
            "type": "string",
            "description": "Call status"
          }
        }
      },
      "NewCall": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Call"
          },
          {
            "required": ["id"],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "apiKey": {
          "type": "apiKey",
          "in": "header",
          "name": "x-api-key"
        }
    }
  }
}
