{
  "openapi": "3.1.0",
  "info": {
    "title": "Ello.AI API",
    "description": "API for managing agents and calls in Ello.AI",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.getello.ai/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/agents": {
      "get": {
        "operationId": "listAgents",
        "tags": ["Agents"],
        "description": "Returns all agents the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-mint": {
          "mcp": {
            "enabled": true
          }
        }
      },
      "post": {
        "operationId": "createAgent",
        "tags": ["Agents"],
        "description": "Creates a new agent",
        "requestBody": {
          "description": "Agent details to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agent created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-mint": {
          "mcp": {
            "enabled": true
          }
        }
      }
    },
    "/calls": {
      "get": {
        "operationId": "getCalls",
        "tags": ["Calls"],
        "description": "Returns all calls the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Call response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Call"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-mint": {
          "mcp": {
            "enabled": true
          }
        }
      },
      "post": {
        "operationId": "createCall",
        "tags": ["Calls"],
        "description": "Creates a new call",
        "requestBody": {
          "description": "Call details to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Call created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-mint": {
          "mcp": {
            "enabled": true
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Agent": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Agent name"
          },
          "type": {
            "type": "string",
            "description": "Agent type"
          }
        }
      },
      "NewAgent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Agent"
          },
          {
            "required": ["id"],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Call": {
        "required": ["agentId"],
        "type": "object",
        "properties": {
          "agentId": {
            "type": "string",
            "description": "ID of the agent"
          },
          "status": {
            "type": "string",
            "description": "Call status"
          }
        }
      },
      "NewCall": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Call"
          },
          {
            "required": ["id"],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
